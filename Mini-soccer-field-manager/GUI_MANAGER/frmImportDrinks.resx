<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pBWater.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pBRevie.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>